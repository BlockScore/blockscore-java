buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
    }
}

apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'eu.appsatori.fatjar'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = "com.blockscore"
archivesBaseName = "blockscore-java"
version = "4.0.1"

repositories {
  jcenter()
}

dependencies {
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'com.squareup.retrofit:converter-jackson:1.9.0'
  compile 'com.squareup.okhttp:okhttp:2.4.0'
  compile 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'

  compile 'com.intellij:annotations:12.0'
  compile 'com.google.code.findbugs:annotations:2.0.2'

  testCompile 'junit:junit:4.12'
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint"
}

jar {
  manifest {
    attributes("Implementation-Title": "Blockscore Java API",
                "Implementation-Version": version,
                "Implementation-Vendor": "Blockscore Inc.")
  }
}

test {
  testLogging {
    events 'started', 'passed'
    showStandardStreams true
  }
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false;
    html.enabled = true;
  }
}

pmd {
  sourceSets = [sourceSets.main]
}

checkstyle {
  toolVersion = "6.7"
  sourceSets = [ sourceSets.main ]
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: '', password: '')
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: '', password: '')
      }

      pom.project {
        name 'Blockscore API'
        packaging 'jar'
        description 'The Blockscore API wrapper for java.'
        url 'http://docs.blockscore.com/v4.0/java/#introduction'

        scm {
          connection 'scm:git:git@github.com:BlockScore/blockscore-java.git'
          developerConnection 'scm:git:git@github.com:BlockScore/blockscore-java.git'
          url 'git@github.com:BlockScore/blockscore-java.git'
        }

        licenses {
          license {
            name 'MIT License'
            url 'http://opensource.org/licenses/MIT'
          }
        }

        developers {
          developer {
            id 'dgollahon'
            name 'Daniel Gollahon'
            email 'Daniel.Gollahon@gmail.com'
          }

          developer {
            id 'ameier'
            name 'Alain Meier'
            email 'Alain@blockscore.com'
          }
        }
      }
    }
  }
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}
